// Generated automatically by nearley, version 2.20.1
// http://github.com/Hardmath123/nearley
(function () {
function id(x) { return x[0]; }
var grammar = {
    Lexer: undefined,
    ParserRules: [
    {"name": "svg_path$ebnf$1", "symbols": []},
    {"name": "svg_path$ebnf$1", "symbols": ["svg_path$ebnf$1", "wsp"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "svg_path$ebnf$2", "symbols": ["moveto_drawto_command_groups"], "postprocess": id},
    {"name": "svg_path$ebnf$2", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "svg_path$ebnf$3", "symbols": []},
    {"name": "svg_path$ebnf$3", "symbols": ["svg_path$ebnf$3", "wsp"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "svg_path", "symbols": ["svg_path$ebnf$1", "svg_path$ebnf$2", "svg_path$ebnf$3"]},
    {"name": "moveto_drawto_command_groups", "symbols": ["moveto_drawto_command_group"]},
    {"name": "moveto_drawto_command_groups$ebnf$1", "symbols": []},
    {"name": "moveto_drawto_command_groups$ebnf$1", "symbols": ["moveto_drawto_command_groups$ebnf$1", "wsp"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "moveto_drawto_command_groups", "symbols": ["moveto_drawto_command_group", "moveto_drawto_command_groups$ebnf$1", "moveto_drawto_command_groups"]},
    {"name": "moveto_drawto_command_group$ebnf$1", "symbols": []},
    {"name": "moveto_drawto_command_group$ebnf$1", "symbols": ["moveto_drawto_command_group$ebnf$1", "wsp"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "moveto_drawto_command_group$ebnf$2", "symbols": ["drawto_commands"], "postprocess": id},
    {"name": "moveto_drawto_command_group$ebnf$2", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "moveto_drawto_command_group", "symbols": ["moveto", "moveto_drawto_command_group$ebnf$1", "moveto_drawto_command_group$ebnf$2"]},
    {"name": "drawto_commands", "symbols": ["drawto_command"]},
    {"name": "drawto_commands$ebnf$1", "symbols": []},
    {"name": "drawto_commands$ebnf$1", "symbols": ["drawto_commands$ebnf$1", "wsp"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "drawto_commands", "symbols": ["drawto_command", "drawto_commands$ebnf$1", "drawto_commands"]},
    {"name": "drawto_command", "symbols": ["closepath"]},
    {"name": "drawto_command", "symbols": ["lineto"]},
    {"name": "drawto_command", "symbols": ["horizontal_lineto"]},
    {"name": "drawto_command", "symbols": ["vertical_lineto"]},
    {"name": "drawto_command", "symbols": ["curveto"]},
    {"name": "drawto_command", "symbols": ["smooth_curveto"]},
    {"name": "drawto_command", "symbols": ["quadratic_bezier_curveto"]},
    {"name": "drawto_command", "symbols": ["smooth_quadratic_bezier_curveto"]},
    {"name": "drawto_command", "symbols": ["elliptical_arc"]},
    {"name": "moveto$subexpression$1", "symbols": [{"literal":"M"}]},
    {"name": "moveto$subexpression$1", "symbols": [{"literal":"m"}]},
    {"name": "moveto$ebnf$1", "symbols": []},
    {"name": "moveto$ebnf$1", "symbols": ["moveto$ebnf$1", "wsp"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "moveto", "symbols": ["moveto$subexpression$1", "moveto$ebnf$1", "moveto_argument_sequence"]},
    {"name": "moveto_argument_sequence", "symbols": ["coordinate_pair"]},
    {"name": "moveto_argument_sequence$ebnf$1", "symbols": ["comma_wsp"], "postprocess": id},
    {"name": "moveto_argument_sequence$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "moveto_argument_sequence", "symbols": ["coordinate_pair", "moveto_argument_sequence$ebnf$1", "lineto_argument_sequence"]},
    {"name": "closepath$subexpression$1", "symbols": [{"literal":"Z"}]},
    {"name": "closepath$subexpression$1", "symbols": [{"literal":"z"}]},
    {"name": "closepath", "symbols": ["closepath$subexpression$1"]},
    {"name": "lineto$subexpression$1", "symbols": [{"literal":"L"}]},
    {"name": "lineto$subexpression$1", "symbols": [{"literal":"l"}]},
    {"name": "lineto$ebnf$1", "symbols": []},
    {"name": "lineto$ebnf$1", "symbols": ["lineto$ebnf$1", "wsp"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "lineto", "symbols": ["lineto$subexpression$1", "lineto$ebnf$1", "lineto_argument_sequence"]},
    {"name": "lineto_argument_sequence", "symbols": ["coordinate_pair"]},
    {"name": "lineto_argument_sequence$ebnf$1", "symbols": ["comma_wsp"], "postprocess": id},
    {"name": "lineto_argument_sequence$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "lineto_argument_sequence", "symbols": ["coordinate_pair", "lineto_argument_sequence$ebnf$1", "lineto_argument_sequence"]},
    {"name": "horizontal_lineto$subexpression$1", "symbols": [{"literal":"H"}]},
    {"name": "horizontal_lineto$subexpression$1", "symbols": [{"literal":"h"}]},
    {"name": "horizontal_lineto$ebnf$1", "symbols": []},
    {"name": "horizontal_lineto$ebnf$1", "symbols": ["horizontal_lineto$ebnf$1", "wsp"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "horizontal_lineto", "symbols": ["horizontal_lineto$subexpression$1", "horizontal_lineto$ebnf$1", "horizontal_lineto_argument_sequence"]},
    {"name": "horizontal_lineto_argument_sequence", "symbols": ["coordinate"]},
    {"name": "horizontal_lineto_argument_sequence$ebnf$1", "symbols": ["comma_wsp"], "postprocess": id},
    {"name": "horizontal_lineto_argument_sequence$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "horizontal_lineto_argument_sequence", "symbols": ["coordinate", "horizontal_lineto_argument_sequence$ebnf$1", "horizontal_lineto_argument_sequence"]},
    {"name": "vertical_lineto$subexpression$1", "symbols": [{"literal":"V"}]},
    {"name": "vertical_lineto$subexpression$1", "symbols": [{"literal":"v"}]},
    {"name": "vertical_lineto$ebnf$1", "symbols": []},
    {"name": "vertical_lineto$ebnf$1", "symbols": ["vertical_lineto$ebnf$1", "wsp"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "vertical_lineto", "symbols": ["vertical_lineto$subexpression$1", "vertical_lineto$ebnf$1", "vertical_lineto_argument_sequence"]},
    {"name": "vertical_lineto_argument_sequence", "symbols": ["coordinate"]},
    {"name": "vertical_lineto_argument_sequence$ebnf$1", "symbols": ["comma_wsp"], "postprocess": id},
    {"name": "vertical_lineto_argument_sequence$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "vertical_lineto_argument_sequence", "symbols": ["coordinate", "vertical_lineto_argument_sequence$ebnf$1", "vertical_lineto_argument_sequence"]},
    {"name": "curveto$subexpression$1", "symbols": [{"literal":"C"}]},
    {"name": "curveto$subexpression$1", "symbols": [{"literal":"c"}]},
    {"name": "curveto$ebnf$1", "symbols": []},
    {"name": "curveto$ebnf$1", "symbols": ["curveto$ebnf$1", "wsp"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "curveto", "symbols": ["curveto$subexpression$1", "curveto$ebnf$1", "curveto_argument_sequence"]},
    {"name": "curveto_argument_sequence", "symbols": ["curveto_argument"]},
    {"name": "curveto_argument_sequence$ebnf$1", "symbols": ["comma_wsp"], "postprocess": id},
    {"name": "curveto_argument_sequence$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "curveto_argument_sequence", "symbols": ["curveto_argument", "curveto_argument_sequence$ebnf$1", "curveto_argument_sequence"]},
    {"name": "curveto_argument$ebnf$1", "symbols": ["comma_wsp"], "postprocess": id},
    {"name": "curveto_argument$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "curveto_argument$ebnf$2", "symbols": ["comma_wsp"], "postprocess": id},
    {"name": "curveto_argument$ebnf$2", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "curveto_argument", "symbols": ["coordinate_pair", "curveto_argument$ebnf$1", "coordinate_pair", "curveto_argument$ebnf$2", "coordinate_pair"]},
    {"name": "smooth_curveto$subexpression$1", "symbols": [{"literal":"S"}]},
    {"name": "smooth_curveto$subexpression$1", "symbols": [{"literal":"s"}]},
    {"name": "smooth_curveto$ebnf$1", "symbols": []},
    {"name": "smooth_curveto$ebnf$1", "symbols": ["smooth_curveto$ebnf$1", "wsp"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "smooth_curveto", "symbols": ["smooth_curveto$subexpression$1", "smooth_curveto$ebnf$1", "smooth_curveto_argument_sequence"]},
    {"name": "smooth_curveto_argument_sequence", "symbols": ["smooth_curveto_argument"]},
    {"name": "smooth_curveto_argument_sequence$ebnf$1", "symbols": ["comma_wsp"], "postprocess": id},
    {"name": "smooth_curveto_argument_sequence$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "smooth_curveto_argument_sequence", "symbols": ["smooth_curveto_argument", "smooth_curveto_argument_sequence$ebnf$1", "smooth_curveto_argument_sequence"]},
    {"name": "smooth_curveto_argument$ebnf$1", "symbols": ["comma_wsp"], "postprocess": id},
    {"name": "smooth_curveto_argument$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "smooth_curveto_argument", "symbols": ["coordinate_pair", "smooth_curveto_argument$ebnf$1", "coordinate_pair"]},
    {"name": "quadratic_bezier_curveto$subexpression$1", "symbols": [{"literal":"Q"}]},
    {"name": "quadratic_bezier_curveto$subexpression$1", "symbols": [{"literal":"q"}]},
    {"name": "quadratic_bezier_curveto$ebnf$1", "symbols": []},
    {"name": "quadratic_bezier_curveto$ebnf$1", "symbols": ["quadratic_bezier_curveto$ebnf$1", "wsp"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "quadratic_bezier_curveto", "symbols": ["quadratic_bezier_curveto$subexpression$1", "quadratic_bezier_curveto$ebnf$1", "quadratic_bezier_curveto_argument_sequence"]},
    {"name": "quadratic_bezier_curveto_argument_sequence", "symbols": ["quadratic_bezier_curveto_argument"]},
    {"name": "quadratic_bezier_curveto_argument_sequence$ebnf$1", "symbols": ["comma_wsp"], "postprocess": id},
    {"name": "quadratic_bezier_curveto_argument_sequence$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "quadratic_bezier_curveto_argument_sequence", "symbols": ["quadratic_bezier_curveto_argument", "quadratic_bezier_curveto_argument_sequence$ebnf$1", "quadratic_bezier_curveto_argument_sequence"]},
    {"name": "quadratic_bezier_curveto_argument$ebnf$1", "symbols": ["comma_wsp"], "postprocess": id},
    {"name": "quadratic_bezier_curveto_argument$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "quadratic_bezier_curveto_argument", "symbols": ["coordinate_pair", "quadratic_bezier_curveto_argument$ebnf$1", "coordinate_pair"]},
    {"name": "smooth_quadratic_bezier_curveto$subexpression$1", "symbols": [{"literal":"T"}]},
    {"name": "smooth_quadratic_bezier_curveto$subexpression$1", "symbols": [{"literal":"t"}]},
    {"name": "smooth_quadratic_bezier_curveto$ebnf$1", "symbols": []},
    {"name": "smooth_quadratic_bezier_curveto$ebnf$1", "symbols": ["smooth_quadratic_bezier_curveto$ebnf$1", "wsp"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "smooth_quadratic_bezier_curveto", "symbols": ["smooth_quadratic_bezier_curveto$subexpression$1", "smooth_quadratic_bezier_curveto$ebnf$1", "smooth_quadratic_bezier_curveto_argument_sequence"]},
    {"name": "smooth_quadratic_bezier_curveto_argument_sequence", "symbols": ["coordinate_pair"]},
    {"name": "smooth_quadratic_bezier_curveto_argument_sequence$ebnf$1", "symbols": ["comma_wsp"], "postprocess": id},
    {"name": "smooth_quadratic_bezier_curveto_argument_sequence$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "smooth_quadratic_bezier_curveto_argument_sequence", "symbols": ["coordinate_pair", "smooth_quadratic_bezier_curveto_argument_sequence$ebnf$1", "smooth_quadratic_bezier_curveto_argument_sequence"]},
    {"name": "elliptical_arc$subexpression$1", "symbols": [{"literal":"A"}]},
    {"name": "elliptical_arc$subexpression$1", "symbols": [{"literal":"a"}]},
    {"name": "elliptical_arc$ebnf$1", "symbols": []},
    {"name": "elliptical_arc$ebnf$1", "symbols": ["elliptical_arc$ebnf$1", "wsp"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "elliptical_arc", "symbols": ["elliptical_arc$subexpression$1", "elliptical_arc$ebnf$1", "elliptical_arc_argument_sequence"]},
    {"name": "elliptical_arc_argument_sequence", "symbols": ["elliptical_arc_argument"]},
    {"name": "elliptical_arc_argument_sequence$ebnf$1", "symbols": ["comma_wsp"], "postprocess": id},
    {"name": "elliptical_arc_argument_sequence$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "elliptical_arc_argument_sequence", "symbols": ["elliptical_arc_argument", "elliptical_arc_argument_sequence$ebnf$1", "elliptical_arc_argument_sequence"]},
    {"name": "elliptical_arc_argument$ebnf$1", "symbols": ["comma_wsp"], "postprocess": id},
    {"name": "elliptical_arc_argument$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "elliptical_arc_argument$ebnf$2", "symbols": ["comma_wsp"], "postprocess": id},
    {"name": "elliptical_arc_argument$ebnf$2", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "elliptical_arc_argument$ebnf$3", "symbols": ["comma_wsp"], "postprocess": id},
    {"name": "elliptical_arc_argument$ebnf$3", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "elliptical_arc_argument$ebnf$4", "symbols": ["comma_wsp"], "postprocess": id},
    {"name": "elliptical_arc_argument$ebnf$4", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "elliptical_arc_argument", "symbols": ["nonnegative_number", "elliptical_arc_argument$ebnf$1", "nonnegative_number", "elliptical_arc_argument$ebnf$2", "number", "comma_wsp", "flag", "elliptical_arc_argument$ebnf$3", "flag", "elliptical_arc_argument$ebnf$4", "coordinate_pair"]},
    {"name": "coordinate_pair$ebnf$1", "symbols": ["comma_wsp"], "postprocess": id},
    {"name": "coordinate_pair$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "coordinate_pair", "symbols": ["coordinate", "coordinate_pair$ebnf$1", "coordinate"]},
    {"name": "coordinate", "symbols": ["number"]},
    {"name": "nonnegative_number", "symbols": ["integer_constant"]},
    {"name": "nonnegative_number", "symbols": ["floating_point_constant"]},
    {"name": "number$ebnf$1", "symbols": ["sign"], "postprocess": id},
    {"name": "number$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "number", "symbols": ["number$ebnf$1", "integer_constant"]},
    {"name": "number$ebnf$2", "symbols": ["sign"], "postprocess": id},
    {"name": "number$ebnf$2", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "number", "symbols": ["number$ebnf$2", "floating_point_constant"]},
    {"name": "flag", "symbols": [{"literal":"0"}]},
    {"name": "flag", "symbols": [{"literal":"1"}]},
    {"name": "comma_wsp$subexpression$1$ebnf$1", "symbols": ["wsp"]},
    {"name": "comma_wsp$subexpression$1$ebnf$1", "symbols": ["comma_wsp$subexpression$1$ebnf$1", "wsp"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "comma_wsp$subexpression$1$ebnf$2", "symbols": ["comma"], "postprocess": id},
    {"name": "comma_wsp$subexpression$1$ebnf$2", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "comma_wsp$subexpression$1$ebnf$3", "symbols": []},
    {"name": "comma_wsp$subexpression$1$ebnf$3", "symbols": ["comma_wsp$subexpression$1$ebnf$3", "wsp"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "comma_wsp$subexpression$1", "symbols": ["comma_wsp$subexpression$1$ebnf$1", "comma_wsp$subexpression$1$ebnf$2", "comma_wsp$subexpression$1$ebnf$3"]},
    {"name": "comma_wsp", "symbols": ["comma_wsp$subexpression$1"]},
    {"name": "comma_wsp$subexpression$2$ebnf$1", "symbols": []},
    {"name": "comma_wsp$subexpression$2$ebnf$1", "symbols": ["comma_wsp$subexpression$2$ebnf$1", "wsp"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "comma_wsp$subexpression$2", "symbols": ["comma", "comma_wsp$subexpression$2$ebnf$1"]},
    {"name": "comma_wsp", "symbols": ["comma_wsp$subexpression$2"]},
    {"name": "comma", "symbols": [{"literal":","}]},
    {"name": "integer_constant", "symbols": ["digit_sequence"]},
    {"name": "floating_point_constant$ebnf$1", "symbols": ["exponent"], "postprocess": id},
    {"name": "floating_point_constant$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "floating_point_constant", "symbols": ["fractional_constant", "floating_point_constant$ebnf$1"]},
    {"name": "floating_point_constant", "symbols": ["digit_sequence", "exponent"]},
    {"name": "fractional_constant$ebnf$1", "symbols": ["digit_sequence"], "postprocess": id},
    {"name": "fractional_constant$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "fractional_constant", "symbols": ["fractional_constant$ebnf$1", {"literal":"."}, "digit_sequence"]},
    {"name": "fractional_constant", "symbols": ["digit_sequence", {"literal":"."}]},
    {"name": "exponent$subexpression$1", "symbols": [{"literal":"e"}]},
    {"name": "exponent$subexpression$1", "symbols": [{"literal":"E"}]},
    {"name": "exponent$ebnf$1", "symbols": ["sign"], "postprocess": id},
    {"name": "exponent$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "exponent", "symbols": ["exponent$subexpression$1", "exponent$ebnf$1", "digit_sequence"]},
    {"name": "sign", "symbols": [{"literal":"+"}]},
    {"name": "sign", "symbols": [{"literal":"-"}]},
    {"name": "digit_sequence", "symbols": ["digit"]},
    {"name": "digit_sequence", "symbols": ["digit", "digit_sequence"]},
    {"name": "digit", "symbols": [/[0-9]/]},
    {"name": "wsp", "symbols": [/[ \t\n]/]}
]
  , ParserStart: "svg_path"
}
if (typeof module !== 'undefined'&& typeof module.exports !== 'undefined') {
   module.exports = grammar;
} else {
   window.grammar = grammar;
}
})();
